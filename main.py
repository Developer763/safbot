import logging
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import ChatPermissions

import os

TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ –≤ –ø–∞–º—è—Ç–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É)
admins = set()

# –ö–æ–º–∞–Ω–¥—ã
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–¥–µ—Ä–∞—Ç–æ—Ä-–±–æ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /ban, /mute, /warn, /kick, /addadmin, /removeadmin, /admins")

@dp.message(Command("addadmin"))
async def add_admin(message: types.Message):
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user_id = message.reply_to_message.from_user.id
    admins.add(user_id)
    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.")

@dp.message(Command("removeadmin"))
async def remove_admin(message: types.Message):
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user_id = message.reply_to_message.from_user.id
    admins.discard(user_id)
    await message.reply(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–Ω—è—Ç —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")

@dp.message(Command("admins"))
async def list_admins(message: types.Message):
    if not admins:
        await message.reply("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
    else:
        text = "üëÆ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:" + "\n".join([str(uid) for uid in admins])
        await message.reply(text)

@dp.message(Command("ban"))
async def ban_user(message: types.Message):
    if message.from_user.id not in admins:
        return await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user_id = message.reply_to_message.from_user.id
    await bot.ban_chat_member(message.chat.id, user_id)
    await message.reply(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–∞–Ω–µ–Ω.")

@dp.message(Command("kick"))
async def kick_user(message: types.Message):
    if message.from_user.id not in admins:
        return await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user_id = message.reply_to_message.from_user.id
    await bot.ban_chat_member(message.chat.id, user_id)
    await bot.unban_chat_member(message.chat.id, user_id)
    await message.reply(f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∫–∏–∫–Ω—É—Ç.")

@dp.message(Command("mute"))
async def mute_user(message: types.Message):
    if message.from_user.id not in admins:
        return await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user_id = message.reply_to_message.from_user.id
    permissions = ChatPermissions(can_send_messages=False)
    await bot.restrict_chat_member(message.chat.id, user_id, permissions=permissions)
    await message.reply(f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–º—å—é—á–µ–Ω.")

@dp.message(Command("warn"))
async def warn_user(message: types.Message):
    if message.from_user.id not in admins:
        return await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
    if not message.reply_to_message:
        return await message.reply("–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    user = message.reply_to_message.from_user
    await message.reply(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.full_name}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
